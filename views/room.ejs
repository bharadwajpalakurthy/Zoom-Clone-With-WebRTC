<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <script>
    const ROOM_ID = "<%= roomId %>"
  </script>
  <script defer src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
  <link rel="preconnect" href="https://fonts.gstatic.com">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">

  <script src="/socket.io/socket.io.js" defer></script>
  <script src="script.js" defer></script>
  <title>Document</title>
  <style>
    #video-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, 300px);
      grid-auto-rows: 300px;
      justify-content: center;
      width: 1100px;
      padding: 2rem;
      margin: 0 auto;
      gap: 2rem;
    }
    * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Poppins";
        }
        body {
          min-height: 100vh;
        }

    button {
            padding: 11px 53px;
            background: #DC4433;
            box-shadow: 0px 4px 16px rgba(220, 68, 51, 0.2);
            border-radius: 16px;
            border: none;
            text-align: center;
            color: white;
            height: 52px;
            font-family: Poppins;
            font-style: normal;
            font-weight: 500;
            font-size: 14px;
            line-height: 18px;
            font-family: Poppins;
            justify-content: center;
            align-items: center;
            letter-spacing: 0.5px;
            transition: background .2s ease;
        }

        button:hover {
            background: #eb5746;

        }

        button:active {
            background: #da4535;

        }
    .icon-btn {
            width: 52px;
            padding: 0;
            padding-top: 4px;
        }

        .actions {
            display: flex;
            width: 200px;
            justify-content: space-around;
            position: absolute;
            bottom: 1rem;
            left: calc(50% - 100px);
        }

        .icon-btn {
            background: #2B303D !important;
            box-shadow: 0px 4px 16px rgba(43, 48, 61, 0.2);
            border-radius: 16px;
            transition: background .5s ease;
        }

        .off-btn {
            background: #797B80 !important;
            box-shadow: 0px 4px 16px rgba(43, 48, 61, 0.2);
            border-radius: 16px;
        }
        #call-btn {
          background: #DC4433 !important;
          cursor: pointer;
        }
    
  

    video {
            background-color: #777;
            height: 100%;
            width: 100%;
            object-fit: cover;
            /* margin: 2rem 0; */
            /* background: url(image.png); */
            filter: drop-shadow(0px 8px 32px rgba(13, 12, 17, 0.3));
            border-radius: 16px;
        }
        .link {
          transition: all .3s ease;
          position: absolute;
          right: 10px;
          font-size: 13px;
          padding: 6px 12px;
          margin: .5rem;
          background-color: #eee;
          border-radius: 8px;
          cursor: pointer;
        }
  </style>
</head>
<body>
  <div class="link" onclick="CopyCode()">Click to Copy Meeting ID</div>
  <div id="video-grid"></div>
  
  <div class="actions">
    <button class="icon-btn" id="video-btn"><img src="/video.svg"> </button>
    <button class="icon-btn" id="audio-btn"><img src="/mic.svg"></button>
    <button onclick="endCall()" class="icon-btn" id="call-btn"><img src="/call.svg"></button>
</div>

<script>
  
  let videoBtn = document.querySelector("#video-btn");
  let audioBtn = document.querySelector("#audio-btn");

  let videoState = true;
  let audioState = true;

  videoBtn.addEventListener('click', (e) => {
          if (!videoState){
              videoBtn.innerHTML = `<img src="/video.svg">`;
              videoBtn.classList.remove("off-btn");

          }
          else{

              videoBtn.innerHTML = `<img src="/video-off.svg">`;
              videoBtn.classList.add("off-btn");
          }
      videoState = !videoState;
  });

  audioBtn.addEventListener('click', (e) => {
          if (!audioState){
              audioBtn.innerHTML = `<img src="/mic.svg">`;
              audioBtn.classList.remove("off-btn");

          }
          else{

              audioBtn.innerHTML = `<img src="/mic-mute.svg">`;
              audioBtn.classList.add("off-btn");

          }
          audioState = !audioState;
  });

  function endCall(){
    window.location.replace("https://" + window.location.hostname + "/home");
  }
  function CopyCode(){
    copyTextToClipboard(window.location.pathname.substring(1));
    document.querySelector(".link").style.background = "#53C100"
    document.querySelector(".link").style.color = "white"
  }

  function copyTextToClipboard(text) {
  if (!navigator.clipboard) {
    fallbackCopyTextToClipboard(text);
    return;
  }
  navigator.clipboard.writeText(text).then(function() {
    console.log('Async: Copying to clipboard was successful!');
  }, function(err) {
    console.error('Async: Could not copy text: ', err);
  });
}
</script>
</body>
</html>